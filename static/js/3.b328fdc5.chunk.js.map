{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/Posts/MyPosts/MyPosts.module.css","components/Profile/PersonInfo/ProfileDataForm.jsx","components/Profile/PersonInfo/ProfileStatus.jsx","components/Profile/PersonInfo/PersonInfo.jsx","redux/selectors/profile-selectors.js","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/MyPosts/MyPosts.jsx","components/Profile/Posts/MyPosts/MyPostsContainer.jsx","assets/images/Profile/cover-img.jpg","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileDataForm","initialValues","profile","updateProfile","setEditMode","onSubmit","formData","a","response","handleSubmit","submitError","submitting","className","classes","description","createField","type","Object","keys","contacts","map","key","contact","cn","disabled","text","error","ProfileStatus","props","useState","editMode","status","setStatus","useEffect","isStatusFetching","insteadOf","autoFocus","onChange","e","target","value","onBlur","updateStatus","statusInput","onDoubleClick","isOwner","ProfileData","height","setHeight","infoFooter","useRef","current","clientHeight","style","personInfo","onClick","element","split","personInfoShow","personInfoFooter","ref","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contacts","contactLink","href","PersonInfo","savePhoto","isFetching","setIsFetching","onPhotoChange","event","files","photoWithFile","picture","alt","src","photos","large","hidden","id","htmlFor","uploadNewPhoto","uploadPhotoIcon","person","pictureContainer","hoverable","getUserProfile","state","profilePage","getUserStatus","getMyPosts","posts","getIsStatusFetching","Post","item","image","smile","message","likes","maxLength10","maxLengthCreator","Textarea","createFormElement","MyPostsForm","onSubmitReset","form","reset","postText","component","name","validate","composeValidators","requiredField","placeholder","MyPosts","addPost","postElements","reverse","post","title","connect","Profile","coverImg","MyPostsContainer","compose","myId","getMyId","isAuthorized","getIsAuthorized","getProfile","getStatus","setStatusFetching","withRouter","userId","match","params","history","push","refreshProfile"],"mappings":"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","file":"static/js/3.b328fdc5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"person\":\"Profile_person__odvzQ\",\"pictureContainer\":\"Profile_pictureContainer__2EFQW\",\"uploadNewPhoto\":\"Profile_uploadNewPhoto__1yG8Z\",\"uploadPhotoIcon\":\"Profile_uploadPhotoIcon__3HO3_\",\"image\":\"Profile_image__1qUqP\",\"statusInput\":\"Profile_statusInput__2KX1_\",\"hoverable\":\"Profile_hoverable__2Flhg\",\"picture\":\"Profile_picture__2cI9A\",\"hidden\":\"Profile_hidden__1JOAK\",\"personInfo\":\"Profile_personInfo__1TiuD\",\"contact\":\"Profile_contact__1MXff\",\"contactLink\":\"Profile_contactLink__1mlXl\",\"error\":\"Profile_error__DjZp1\",\"description\":\"Profile_description__GZf0y\",\"editProfile\":\"Profile_editProfile__2Tv-X\",\"disabled\":\"Profile_disabled__Pp1tn\",\"personInfoShow\":\"Profile_personInfoShow__Cf34R\",\"personInfoFooter\":\"Profile_personInfoFooter__F41Yf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1qE9m\",\"image\":\"Post_image__3PFhZ\",\"text\":\"Post_text__3A8l0\",\"likes\":\"Post_likes__3wAsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MyPosts_form__o8j_Z\",\"title\":\"MyPosts_title__3nOHt\"};","import classes from '../Profile.module.css';\nimport React from 'react';\nimport { Form } from 'react-final-form';\nimport { Button, createField } from '../../сommon/FormControls/FormControls';\nimport cn from 'classnames';\n\nconst ProfileDataForm = ({ initialValues, profile, updateProfile, setEditMode }) => {\n    const onSubmit = async formData => {\n        const response = await updateProfile(formData);\n\n        if (response) return response;\n\n        setEditMode(false);\n    };  \n    return (\n        <Form onSubmit={onSubmit} initialValues={initialValues}>\n            {\n                ({ handleSubmit, submitError, submitting }) => (\n                    <form onSubmit={handleSubmit}>\n                        <p><b className={classes.description}>Full name: </b></p>{ createField('full name..', null, 'fullName', 'input', []) }\n                        <p><b className={classes.description}>About me: </b></p>{ createField('About me..', null, 'aboutMe', 'textarea', []) }\n                        <p><b className={classes.description}>Looking for a job: </b></p>{ createField(null, null, 'lookingForAJob', 'input', [], {type: 'checkbox'}) }\n                        <p><b className={classes.description}>My professional skills: </b></p>{ createField('description..', null, 'lookingForAJobDescription', 'textarea', []) }\n                        <div>\n                            <h3 className={classes.description}>Contacts: </h3>\n                            {Object.keys(profile.contacts).map(key => (\n                                <div key={key} className={classes.contact}>\n                                    <p><b className={classes.description}>{key}: </b></p> {createField(key, null, 'contacts.' + key, 'input', [])}\n                                </div>\n                            ))} \n                        </div>\n                        <Button className={cn({\n                            [classes.disabled]: submitting\n                        })} disabled={submitting} text={submitting ? 'Ожидайте...': 'Save edited information'} />\n                        {submitError && <p className={classes.error}>{submitError}</p>}\n                    </form>\n                )\n            }\n        </Form>\n    );\n};\n\nexport default ProfileDataForm;","import classes from '../Profile.module.css';\nimport React, { useEffect, useState } from 'react';\nimport Preloader from '../../сommon/Preloader/Preloder';\n\n\nconst ProfileStatus = props => {;\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const onChangeInput = e => {\n        setStatus(e.target.value);\n    };\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    };\n\n    if (props.isStatusFetching) {\n        return <Preloader insteadOf={'status'} />\n    }\n    \n    return (\n        <div>\n            <p><b>Status:</b> </p>\n            {editMode ?\n                <input autoFocus={true} onChange={onChangeInput} onBlur={deactivateEditMode} className={classes.statusInput} value={status} type=\"text\" /> :\n                <span onDoubleClick={props.isOwner ? activateEditMode: null}>{props.status || 'no status at the time'}</span>\n            }\n        </div>\n    );\n}\n\nexport default ProfileStatus;\n\n","import { useEffect, useRef, useState } from 'react';\nimport Preloader from '../../сommon/Preloader/Preloder';\nimport classes from '../Profile.module.css';\nimport ProfileDataForm from './ProfileDataForm';\nimport ProfileStatus from './ProfileStatus';\nimport cn from 'classnames';\nimport { FaCamera } from \"react-icons/fa\";\nimport { Button } from '../../сommon/FormControls/FormControls';\n\nconst PersonInfo = ({ profile, status, updateStatus, isOwner, savePhoto, updateProfile, isStatusFetching }) => {\n    let [isFetching, setIsFetching] = useState(false);\n    let [editMode, setEditMode] = useState(false);\n\n    const onPhotoChange = async event => {\n        setIsFetching(true);\n        await savePhoto(event.target.files[0]);\n        setIsFetching(false);\n    };\n\n    let photoWithFile = (\n        <>\n            <img className={classes.picture} alt=\"my avatar\" src={profile.photos.large ? profile.photos.large : \"https://pbs.twimg.com/profile_images/1285655593592791040/HtwPZgej.jpg\"} />\n            {isOwner &&\n                <>\n                    <input type={'file'} className={classes.hidden} onChange={onPhotoChange} id={'input-file'} />\n                    <label htmlFor={'input-file'} className={classes.uploadNewPhoto}>\n                        <FaCamera className={classes.uploadPhotoIcon} />\n                    </label>\n                </>}\n        </>\n    );\n\n    return (\n        <div className={classes.person}>\n            <div className={cn(classes.pictureContainer, {[classes.hoverable]: isOwner})}>\n                {isFetching ? <Preloader /> : photoWithFile}\n            </div>\n            <ProfileStatus status={status} isStatusFetching={isStatusFetching} updateStatus={updateStatus} isOwner={isOwner} />\n            {editMode ? <ProfileDataForm updateProfile={updateProfile} setEditMode={setEditMode} initialValues={profile} profile={profile} /> :\n            <ProfileData profile={profile} setEditMode={setEditMode} isOwner={isOwner} />}\n        </div >\n    );\n\n};\n\nconst ProfileData = ({ profile, setEditMode, isOwner }) => {\n    let [height, setHeight] = useState(0);\n    let infoFooter = useRef(null);\n    \n    useEffect(() => {\n        setHeight(infoFooter.current.clientHeight);\n        infoFooter.current.style.height = infoFooter.current.clientHeight + 'px';\n    }, []);\n\n    const toggleShow = e => {\n        const element = infoFooter.current;\n        if (element.style.height.split('px')[0] === '0') {\n            element.style.height = height + 'px';\n\n            return;\n        }\n\n        element.style.height = 0;\n\n    };\n    return (\n        <div className={classes.personInfo}>\n            <header>\n                <button onClick={toggleShow} className={cn(classes.personInfoShow)} type={'button'}>Показать информацию профиля</button>\n            </header>\n            <footer className={cn(classes.personInfoFooter)} ref={infoFooter} >\n                <p><b className={classes.description}>Full name: </b>{profile.fullName}</p>\n                <p><b className={classes.description}>About me: </b>{profile.aboutMe}</p>\n                <p><b className={classes.description}>Looking for a job: </b>{profile.lookingForAJob ? 'yes' : 'no'}</p>\n                {profile.lookingForAJob && <p><b className={classes.description}>My professional skills: </b>{profile.lookingForAJobDescription}</p>}\n                <div>\n                    <h3>Contacts: </h3>\n                    {Object.keys(profile.contacts).map(key => (\n                        <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n                    ))}\n                </div>\n                {isOwner && <Button text={'Edit Profile'} onClick={setEditMode} />}\n            </footer>\n\n        </div>\n    )\n}\n\nconst Contacts = ({ contactTitle, contactValue }) => {\n    return (\n        <p><b className={classes.contact + \" \" + classes.description}>{contactTitle}</b>: <a className={classes.contactLink} href={contactValue} target=\"__blank\">{contactValue}</a></p>\n    );\n};\n\nexport default PersonInfo;","export const getUserProfile = state => {\n    return state.profilePage.profile;\n};\n\nexport const getUserStatus = state => {\n    return state.profilePage.status;\n};\n\nexport const getMyPosts = state => {\n    return state.profilePage.posts;\n};\n\nexport const getIsStatusFetching = state => {\n    return state.profilePage.isStatusFetching;\n};","import classes from './Post.module.css';\nimport smile from '../../../../assets/images/smile.jpg';\n\nconst Post = (props) => {\n\n    return (\n        <div className={classes.item}>\n            <img className={classes.image} src={props.profile?.photos.large || smile} alt=\"my avatar\"/>\n            <div className={classes.text}>\n                <p>{ props.message }</p>\n                <p className={classes.likes}>Likes: {props.likes}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Post;","import Post from '../Post/Post';\nimport classes from './MyPosts.module.css';\nimport React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { maxLengthCreator, requiredField, composeValidators } from '../../../../utils/validators/validators';\nimport { Button, createFormElement } from '../../../сommon/FormControls/FormControls';\n\nconst maxLength10 = maxLengthCreator(10);\nconst Textarea = createFormElement(\"textarea\");\n\nconst MyPosts = ({posts, profile, isOwner, addPost}) => { \n    let postElements = [...posts].reverse().map(post => <Post profile={profile} message={post.message} likes={post.likes} key={post.id} />);\n\n    if (!isOwner) {\n        return null;\n    }\n\n    return (\n        <div>\n            <h2 className={classes.title}>Add a new post</h2>\n            <MyPostsForm onSubmit={addPost} />\n            {postElements};\n        </div>\n    );\n};\n\nconst MyPostsForm = props => {\n    const onSubmit = formData => {\n        props.onSubmit(formData.postText);\n    };\n\n    const onSubmitReset = async (event, handleSubmit, form) => {\n        handleSubmit(event);\n        form.reset();\n    };\n\n    return (\n        <Form onSubmit={onSubmit} >\n            {( {handleSubmit, form} ) => (\n                <form className={classes.form} onSubmit={event => onSubmitReset(event, handleSubmit, form)}>\n                    <Field component={Textarea} name={'postText'} className={'comment'} validate={composeValidators(requiredField, maxLength10)} placeholder='your news.....' />\n                    <Button text={'Apply'} />\n                </form>\n            )}\n        </Form>\n    );\n};\n\n\n\nexport default MyPosts;","import { connect } from 'react-redux';\nimport { addPost } from '../../../../redux/profile-reducer';\nimport { getMyPosts, getUserProfile } from '../../../../redux/selectors/profile-selectors';\nimport MyPosts from './MyPosts';\n\n\nconst mapStateToProps = state => {\n    return {\n        posts: getMyPosts(state),\n        profile: getUserProfile(state)\n    };\n};\n\nexport default connect(mapStateToProps, { addPost })(MyPosts);","export default __webpack_public_path__ + \"static/media/cover-img.20514fb5.jpg\";","import React from 'react';\nimport Preloader from '../сommon/Preloader/Preloder';\nimport PersonInfo from './PersonInfo/PersonInfo';\nimport MyPostsContainer from './Posts/MyPosts/MyPostsContainer';\nimport classes from './Profile.module.css';\nimport coverImg from '../../assets/images/Profile/cover-img.jpg';\n\n\nconst Profile = props => {\n    if (!props.profile) {\n        return <Preloader />\n    }\n\n    return (\n        <>\n            <div className={classes.image}>\n                <img src={coverImg} alt=\"\"/>\n            </div>\n            <PersonInfo updateProfile={props.updateProfile} \n                        profile={props.profile} \n                        isOwner={props.isOwner} \n                        savePhoto={props.savePhoto} \n                        status={props.status} \n                        updateStatus={props.updateStatus}\n                        isStatusFetching={props.isStatusFetching}/>\n            <MyPostsContainer isOwner={props.isOwner} />\n        </>\n    );\n};\n\nexport default Profile;","import { compose } from 'redux';\nimport React, { useEffect } from 'react';\nimport { getProfile, getStatus, updateStatus, savePhoto, updateProfile, setStatusFetching } from '../../redux/profile-reducer';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { withRouter } from 'react-router-dom';\nimport { getUserStatus, getUserProfile, getIsStatusFetching } from '../../redux/selectors/profile-selectors';\nimport { getIsAuthorized, getMyId } from '../../redux/selectors/auth-selectors';\n\nconst ProfileContainer  = props => {\n    let userId = props.match.params.userId;\n\n    useEffect(() => {\n        const refreshProfile = async () => {\n            if (!userId) {\n                userId = props.myId;\n                \n                if (!userId) {\n                    props.history.push('/login');\n                    return;\n                }\n\n                props.getProfile(userId);\n\n                props.setStatusFetching(true);\n                await props.getStatus(userId);\n                props.setStatusFetching(false);\n                return;\n            }\n\n            props.getStatus(userId);\n            props.getProfile(userId);\n            \n        }\n\n        refreshProfile();\n    }, [userId])\n\n    return (\n        <Profile {...props} isOwner={!props.match.params.userId} />\n    );\n}\n\nconst mapStateToProps = state => ({\n    profile: getUserProfile(state),\n    myId: getMyId(state),\n    status: getUserStatus(state),\n    isAuthorized: getIsAuthorized(state),\n    isStatusFetching: getIsStatusFetching(state)\n});\n\nexport default compose(\n    connect(mapStateToProps, { getProfile, getStatus, updateStatus, savePhoto, updateProfile, setStatusFetching }),\n    withRouter,\n)(ProfileContainer);"],"sourceRoot":""}